{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","addMovie","onAddMovie","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","hasTitleError","setTitleError","hasImgUrlError","setImgUrlError","hasImdbUrlError","setImdbUrlError","hasImdbIdError","setImdbIdError","isDisabledBtn","setStatusBtn","mounted","useRef","useEffect","current","regex","handleOnBlur","event","target","value","name","test","onSubmit","newMovie","preventDefault","currentTarget","reset","htmlFor","classNames","type","id","placeholder","onBlur","onChange","disabled","App","state","moviesFromServer","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27c8b68d.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useEffect, useRef, useState } from 'react';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void\n};\n\nexport const NewMovie:React.FC<Props> = ({ onAddMovie: addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasImgUrlError, setImgUrlError] = useState(false);\n  const [hasImdbUrlError, setImdbUrlError] = useState(false);\n  const [hasImdbIdError, setImdbIdError] = useState(false);\n  const [isDisabledBtn, setStatusBtn] = useState(true);\n\n  const mounted = useRef(false);\n\n  useEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true;\n    } else {\n      setStatusBtn((hasImdbIdError\n        || hasImdbUrlError || hasImgUrlError || hasTitleError));\n    }\n  }, [hasTitleError, hasImgUrlError, hasImdbUrlError, hasImdbIdError]);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    event.preventDefault();\n    event.currentTarget.reset();\n\n    addMovie(newMovie);\n\n    setImgUrl('');\n    setImdbId('');\n    setImdbUrl('');\n    setTitle('');\n    setDescription('');\n  };\n\n  // eslint-disable-next-line max-len\n  const regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  const handleOnBlur = (event: React.FocusEvent<HTMLInputElement, Element>) => {\n    const { value, name } = event.target;\n\n    switch (name) {\n      case 'title':\n        setTitleError(!value);\n        break;\n\n      case 'imgUrl':\n        setImgUrlError(!regex.test(value) || !value);\n        break;\n\n      case 'imdbUrl':\n        setImdbUrlError(!regex.test(value) || !value);\n        break;\n\n      case 'imdbId':\n        setImdbIdError(!value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"field\">\n        <label htmlFor=\"title\" className=\"label\">\n          Title\n        </label>\n        <div className=\"control\">\n          <input\n            className={\n              classNames(\n                'input',\n                { 'is-danger': hasTitleError },\n              )\n            }\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            value={title}\n            placeholder=\"Enter the title\"\n            data-cy=\"form-title\"\n            onBlur={handleOnBlur}\n            onChange={(event) => setTitle(event.target.value)}\n          />\n\n          {hasTitleError && (\n            <p className=\"help is-danger\">Please enter the title</p>\n          )}\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"description\" className=\"label\">\n          Description\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            className=\"textarea\"\n            name=\"description\"\n            id=\"description\"\n            placeholder=\"Write description\"\n            data-cy=\"form-description\"\n            value={description}\n            onChange={(event) => setDescription(event.target.value)}\n          />\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"imgUrl\" className=\"label\">\n          imgUrl\n        </label>\n\n        <div className=\"control\">\n          <input\n            className={\n              classNames(\n                'input',\n                { 'is-danger': hasImgUrlError },\n              )\n            }\n            type=\"text\"\n            name=\"imgUrl\"\n            id=\"imgUrl\"\n            placeholder=\"Enter url for cover\"\n            data-cy=\"form-imgUrl\"\n            value={imgUrl}\n            onBlur={handleOnBlur}\n            onChange={(event) => setImgUrl(event.target.value)}\n          />\n          {hasImgUrlError && (\n            <p className=\"help is-danger\">\n              This is a required field and must be a URL\n            </p>\n          )}\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"imdbUrl\" className=\"label\">\n          Url\n        </label>\n\n        <div className=\"control\">\n          <input\n            className={\n              classNames(\n                'input',\n                { 'is-danger': hasImdbUrlError },\n              )\n            }\n            type=\"text\"\n            name=\"imdbUrl\"\n            id=\"imdbUrl\"\n            placeholder=\"Enter url for the movie\"\n            data-cy=\"form-imdbUrl\"\n            value={imdbUrl}\n            onBlur={handleOnBlur}\n            onChange={(event) => setImdbUrl(event.target.value)}\n          />\n          {hasImdbUrlError && (\n            <p className=\"help is-danger\">\n              This is a required field and must be a URL\n            </p>\n          )}\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"imdbId\" className=\"label\">\n          Id\n        </label>\n\n        <div className=\"control\">\n          <input\n            className={\n              classNames(\n                'input',\n                { 'is-danger': hasImdbIdError },\n              )\n            }\n            type=\"text\"\n            name=\"imdbId\"\n            id=\"imdbId\"\n            placeholder=\"Enter Id of movie\"\n            data-cy=\"form-imdbId\"\n            value={imdbId}\n            onBlur={handleOnBlur}\n            onChange={(event) => setImdbId(event.target.value)}\n          />\n          {hasImdbIdError && (\n            <p className=\"help is-danger\">Please enter Id</p>\n          )}\n        </div>\n      </div>\n\n      <button\n        className=\"button is-success\"\n        type=\"submit\"\n        data-cy=\"form-submit-button\"\n        disabled={isDisabledBtn}\n      >\n        Add movie\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => {\n      return {\n        movies: [...state.movies, movie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAddMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}